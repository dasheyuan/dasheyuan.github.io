<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Linux on Chen Yuan&#39;s Blog </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://dasheyuan.com/tags/linux/</link>
    
    
    <copyright>Copyright (c) 2016,Chen Yuan; all rights reserved.</copyright>
    <updated>Sat, 07 May 2016 18:00:28 CST</updated>
    
    <item>
      <title>公钥验证登录远程服务器</title>
      <link>http://dasheyuan.com/post/remote-login-without-password</link>
      <pubDate>Sat, 07 May 2016 18:00:28 CST</pubDate>
      
      <guid>http://dasheyuan.com/post/remote-login-without-password</guid>
      <description>&lt;p&gt;操作Linux系统一般会使用SSH工具进行远程登录系统操作。&lt;/p&gt;

&lt;p&gt;使用SSH工具远程登录系统，一般会使用Linux系统的账号和密码。&lt;/p&gt;

&lt;p&gt;使用密码登录，每次都必须输入密码，非常麻烦。好在SSH还提供了公钥登录，可以省去输入密码的步骤。&lt;/p&gt;

&lt;p&gt;所谓&amp;rdquo;公钥登录&amp;rdquo;，原理很简单，就是用户将自己的公钥储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。&lt;/p&gt;

&lt;p&gt;另外，这个过程之前会有一个远程主机向用户发送远程主机公钥的过程，用户需要判断远程主机的公钥是否是真正的远程主机，不然就会带来安全问题（&lt;a href=&#34;https://en.wikipedia.org/wiki/Man-in-the-middle_attack&#34;&gt;中间者攻击&lt;/a&gt;）。&lt;/p&gt;

&lt;p&gt;可以知道，上面的过程要用到&lt;strong&gt;两对&lt;/strong&gt;密钥对。一对是用作远程主机向客户端安全通信的，一对用作是客户端向远程主机安全通信的。&lt;/p&gt;

&lt;p&gt;测试环境&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ubuntu 14.04安装openssh-server作为远程服务器，用户：bwa  IP：192.168.27.128&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Ubuntu 14.04终端作为客户端 IP：192.168.27.3，或者使用Xshell工具登录&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;测试步骤&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shell重定向2&gt;&amp;1的理解</title>
      <link>http://dasheyuan.com/post/shell-redirect</link>
      <pubDate>Wed, 16 Mar 2016 22:11:03 CST</pubDate>
      
      <guid>http://dasheyuan.com/post/shell-redirect</guid>
      <description>&lt;h2 id=&#34;一-系统文件描述符:690961c0631c450a5ba210a36e05dd89&#34;&gt;一、系统文件描述符&lt;/h2&gt;

&lt;p&gt;标准输入   0&lt;br /&gt;
 标准输出   1&lt;br /&gt;
 标准错误输出 2&lt;/p&gt;

&lt;p&gt;测试用例&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat mytest.sh 
echo &amp;quot;my test&amp;quot;
mytest
$ ./mytest.sh 
my test  #标准输出
./mytest.sh: line 2: mytest: command not found #标准错误输出
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>

