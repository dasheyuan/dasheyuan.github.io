<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title> on Chen Yuan&#39;s Blog </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://dasheyuan.com/</link>
    
    
    <copyright>Copyright (c) 2016,Chen Yuan; all rights reserved.</copyright>
    <updated>Tue, 12 Apr 2016 23:30:28 CST</updated>
    
    <item>
      <title>hp 2570p准系统组装经历</title>
      <link>http://dasheyuan.com/post/barebone-system</link>
      <pubDate>Tue, 12 Apr 2016 23:30:28 CST</pubDate>
      
      <guid>http://dasheyuan.com/post/barebone-system</guid>
      <description>&lt;p&gt;第一次接触“准系统”这三个字还是上个月的事吧，因为考虑入手一台二手的笔记本以备不时之需。准系统不是什么高大上的东西，笔记本（台式机也一样）去掉CPU、内存、硬盘等后就可以叫“准系统”。笔记本出厂阶段都有一个准系统的阶段的。&lt;/p&gt;

&lt;p&gt;准系统除了厂家生产出售的，还存在由外国淘汰掉的，俗称洋垃圾，流进国内的笔记本。为了提高倒卖价格，把笔记本拆分成准系统出售。也有可能是内存、硬盘毁掉（重要数据）了，笔记本再被回收流转的。&lt;/p&gt;

&lt;p&gt;扯了一些概念，还是看看我组装好的笔记本配置及总共花费吧。&lt;/p&gt;

&lt;p&gt;安装好Win10系统，开机在10秒内！&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;购买平台         配件类型           型号             价格 
论坛/淘宝        准系统           hp 2570p          600
淘宝             CPU             i5 3230m         458
京东             内存x2           金士顿 4G         234
京东             固态硬盘         闪迪 加强版240G    379
                                             合计：1671
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从刚开始的入手台笔记本的想法到现在，墨迹了大半个月。一般是在数码之家上了解二手交易的信息，有时候也会在闲鱼上看一下，浏览一下有没有“笋野”。&lt;br /&gt;
终于，上周五，为了不想再花时间耗在这方面，头一热，和论坛里一个“二手商”交流了一下，就从他那里入手台了hp 2570p的准系统。特意加了50块要台成色最好的，不知道有没有被坑。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LTE终端信号强度单位dBm与asu的关系</title>
      <link>http://dasheyuan.com/post/arbitrary-strength-unit</link>
      <pubDate>Thu, 07 Apr 2016 23:30:28 CST</pubDate>
      
      <guid>http://dasheyuan.com/post/arbitrary-strength-unit</guid>
      <description>&lt;p&gt;最近在看LTE的入门通识相关的资料。LTE终端进行小区选择的过程中，会测量小区参考信号的信号强度RSRP，然后根据测量到的RSRP，通过选择算法进行判决，判决通过后，终端就会与目标小区同步。选择算法中提到一个值Q_rxlevmin，指可驻留的目标小区需要的最低RSRP，通常为-124dBm。&lt;/p&gt;

&lt;p&gt;顺手拿去手机，想看一下手机上有没有信号强度相关的信息。找到一组数据“信号强度 -61dBm 26asu”。dBm是常见的功率参考单位，那么asu又是什么呢？&lt;br /&gt;
asu也是一种信号强度参考（相对）单位，一般出现在Android系统的手机中。&lt;br /&gt;
asu，维基百科中指的是Arbitrary Strength Unit，百度却是Alone Signal Unit，我没有找到确实的出处。后来一想，这在Android API中就指的是一个相对于dBm的整形变量，具体定义是什么并不重要了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>搭建OpenStack/DevStack远程开发调试环境</title>
      <link>http://dasheyuan.com/post/openstack-dev-environment</link>
      <pubDate>Fri, 01 Apr 2016 15:22:01 CST</pubDate>
      
      <guid>http://dasheyuan.com/post/openstack-dev-environment</guid>
      <description>&lt;p&gt;在开始写这篇文章的时候，有种感慨：搭建OpenStack/DevStack开发调试环境&lt;strong&gt;成本&lt;/strong&gt;真不低。涉及的技术太多了。不知道什么时候对OpenStack的开发与PHP一样，可以一键部署开发环境呢？&lt;/p&gt;

&lt;p&gt;这篇文章记录的是如何搭建OpenStack/DevStack的开发环境，具体调试过程将结合一个Neutron API新建的例子。&lt;/p&gt;

&lt;p&gt;这是在网上查找参考的基础上，自己进行的测试，记录下来希望加深自己的理解。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PyCharm远程调试</title>
      <link>http://dasheyuan.com/post/pycharm-remote-debugging</link>
      <pubDate>Wed, 30 Mar 2016 15:22:01 CST</pubDate>
      
      <guid>http://dasheyuan.com/post/pycharm-remote-debugging</guid>
      <description>&lt;p&gt;PyCharm提供两种远程调试(Remote Debugging)的方式:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;配置远程的解释器（remote interpreter）&lt;/li&gt;
&lt;li&gt;配置Python调试服务器（Python Debug Server）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本文主要介绍Python Debug Server配置与使用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用screen查看OpenStack进程</title>
      <link>http://dasheyuan.com/post/screen-openstack</link>
      <pubDate>Tue, 29 Mar 2016 14:00:01 CST</pubDate>
      
      <guid>http://dasheyuan.com/post/screen-openstack</guid>
      <description>&lt;p&gt;介绍screen在openstack调试中的使用，整理screen的内容及快捷键。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.chenshake.com/install-ubuntu-14-04-devstack/&#34;&gt;DevStack安装&lt;/a&gt;完成后，即OpenStack的平台搭建成功了，可以通过dashboard对平台进行使用。如果需要进一步调试和开发openstack，可以了解一下screen相关的内容。通过screen可以查看OpenStack运行的进程，最主要的是终止和重启需要调试的进程。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LTE网格架构简介</title>
      <link>http://dasheyuan.com/post/lte-network-architecture</link>
      <pubDate>Mon, 21 Mar 2016 23:00:01 CST</pubDate>
      
      <guid>http://dasheyuan.com/post/lte-network-architecture</guid>
      <description>&lt;p&gt;首先描述了E-UTRAN（LTE）网络架构参考模型，给出当前3GPP中描述的整体网络架构，包括2G、3G和4G；然后是介绍E-UTRAN（LTE）中的网元及其功能。&lt;/p&gt;

&lt;p&gt;说明：文中的图片参考的是3GPP版本12的规范文档。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shell重定向2&gt;&amp;1的理解</title>
      <link>http://dasheyuan.com/post/shell-redirect</link>
      <pubDate>Wed, 16 Mar 2016 22:11:03 CST</pubDate>
      
      <guid>http://dasheyuan.com/post/shell-redirect</guid>
      <description>&lt;h2 id=&#34;一-系统文件描述符:690961c0631c450a5ba210a36e05dd89&#34;&gt;一、系统文件描述符&lt;/h2&gt;

&lt;p&gt;标准输入   0&lt;br /&gt;
 标准输出   1&lt;br /&gt;
 标准错误输出 2&lt;/p&gt;

&lt;p&gt;测试用例&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat mytest.sh 
echo &amp;quot;my test&amp;quot;
mytest
$ ./mytest.sh 
my test  #标准输出
./mytest.sh: line 2: mytest: command not found #标准错误输出
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>程序员怎样才能写出一篇好的博客或者技术文章(转)</title>
      <link>http://dasheyuan.com/post/programmer-how-to-write-a-good-article</link>
      <pubDate>Wed, 02 Mar 2016 19:00:03 CST</pubDate>
      
      <guid>http://dasheyuan.com/post/programmer-how-to-write-a-good-article</guid>
      <description>&lt;p&gt;转自：&lt;a href=&#34;https://www.phodal.com/blog/programmer-how-to-write-a-good-article&#34;&gt;https://www.phodal.com/blog/programmer-how-to-write-a-good-article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;文章来源于 @justjavac在知乎上的邀请，要写在知乎上的回答。因为有原创，所以先首发，免得被伪原创。每天有大把的时间刷GitHub，写博客。从我大二的时候，大概六年前开始写技术博客，到现在已经有540+了，大概每年会写一百篇左右。&lt;/p&gt;

&lt;p&gt;这个答案由四部分组成：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;博客的流量来源&lt;/li&gt;
&lt;li&gt;不同文章类型的写作要点&lt;/li&gt;
&lt;li&gt;如何写博客&lt;/li&gt;
&lt;li&gt;如何收集写作的灵感&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Hugo静态网站生成器中文教程(转)</title>
      <link>http://dasheyuan.com/post/nanshu-hugo</link>
      <pubDate>Sat, 20 Feb 2016 19:00:03 CST</pubDate>
      
      <guid>http://dasheyuan.com/post/nanshu-hugo</guid>
      <description>&lt;p&gt;转自：&lt;a href=&#34;http://nanshu.wang/post/2015-01-31/&#34;&gt;http://nanshu.wang/post/2015-01-31/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;前言:3e7c7706b10fef646211d11c51f37f23&#34;&gt;前言&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt;是什么？官方文档是这样介绍它的：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hugo is a general-purpose website framework. Technically speaking, Hugo is a static site generator.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hugo是一种通用的网站框架。严格来说，Hugo应该被称作静态网站生成器。&lt;/p&gt;

&lt;p&gt;静态网站生成器从字面上来理解，就是将你的内容生成静态网站。所谓“静态”的含义其实反映在网站页面的生成的时间。一般的web服务器（WordPress, Ghost, Drupal等等）在收到页面请求时，需要调用数据库生成页面（也就是HTML代码），再返回给用户请求。而静态网站则不需要在收到请求后生成页面，而是在整个网站建立起之前就将所有的页面全部生成完成，页面一经生成便称为静态文件，访问时直接返回现成的静态页面，不需要数据库的参与。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>http://dasheyuan.com/about</link>
      <pubDate>Thu, 18 Feb 2016 13:30:00 CST</pubDate>
      
      <guid>http://dasheyuan.com/about</guid>
      <description>2010 红岩网校@CQUPT 2015 BWA@TSINGHUA EMAIL：dasheyuan@qq.com 陈圆，男，90后，属羊，老家广东茂名。 大蛇圆是初中同学起的昵称，当时火影忍者还很火。我挺喜欢这个昵称的。 关于博客 通信小硕。读研实习期间，拼凑模仿，逐步搭建完善自己的技术日志站点，旨在记录分享在北京求学和以后学习的点滴积累，更重要的是督促自己不断地总结所学的内容。 钟意 瞎吐槽，深夜惊奇@知乎日报 糗事播报，段子来了，段子来了羞羞版，一黑到底@喜马拉雅FM 原创精选，轻松时刻，暴走大事件，罗辑思维，时间的朋友，麻辣隔壁，毛骗@优酷 黄子华棟笃笑 郑渊洁童话大王 今晚80后脱口秀 屌丝男士 糗事百科 奔跑吧兄弟 仙剑奇侠传 打游戏 小智 小莫解说 七龙珠 跑步 吉他 卡农 天空之城 许巍 艾薇儿 煮饭 熬汤 糖醋排骨 化州糖水 水果 逛书店 奥卡姆剃刀 数学 模仿 Python Markdown Git 夜空中最亮的星 人月神话 九寨沟 唔钟意 雾霾 台风 北京冷 重庆热 睡不着 太冷清 唔该 spf13 Nanshu Wang</description>
    </item>
    
    <item>
      <title>OpenStack中的设计模式1:单例模式</title>
      <link>http://dasheyuan.com/post/openstack-singleton-pattern</link>
      <pubDate>Sun, 14 Feb 2016 21:30:28 CST</pubDate>
      
      <guid>http://dasheyuan.com/post/openstack-singleton-pattern</guid>
      <description>&lt;p&gt;设计模式（Design Pattern）是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。从而可以通过使用设计模式让代码更容易被别人理解，同时有保证了代码的可靠性。&lt;/p&gt;

&lt;p&gt;单例模式（Singleton Pattern）最初的定义出现于《设计模式》（艾迪生维斯理, 1994）：“保证一个类仅有一个实例，并提供一个访问它的全局访问点。”&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Search</title>
      <link>http://dasheyuan.com/search</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      
      <guid>http://dasheyuan.com/search</guid>
      <description></description>
    </item>
    
  </channel>
</rss>

